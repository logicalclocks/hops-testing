Vagrant.configure("2") do |config|

  config.ssh.insert_key = false
  config.disksize.size = "100GB"

  config.vm.define "ubuntu-name" do |hopsworks|
     hopsworks.vm.box = "ubuntu/bionic64"
     hopsworks.vm.hostname = 'hopsworks0.logicalclocks.com'
     hopsworks.vm.boot_timeout = 3600
     # Mount .m2 directory for maven cache
     hopsworks.vm.synced_folder "../m2", "/root/.m2", create: true
     # Mount output directory
     hopsworks.vm.synced_folder "../out", "/home/vagrant/test_report", create: true

     hopsworks.vm.network :forwarded_port, guest: 22, host: 10022, id: "ssh"
     # karamel http
     hopsworks.vm.network(:forwarded_port, {:guest=>9090, :host=>9090})
     # Hopsworks http
     hopsworks.vm.network(:forwarded_port, {:guest=>8181, :host=>8181})
     # Glassfish admin UI
     hopsworks.vm.network(:forwarded_port, {:guest=>4848, :host=>4848})

     hopsworks.vm.provision "file", source: "cluster.yml", destination: "cluster.yml"
     #Copy hopsworks so we don't need to git clone it
     hopsworks.vm.provision "file", source: "~/.vagrant.d/insecure_private_key", destination: "~/.ssh/id_rsa"
     hopsworks.vm.provision "shell", inline: "cp /home/vagrant/.ssh/authorized_keys /home/vagrant/.ssh/id_rsa.pub && sudo chown vagrant:vagrant /home/vagrant/.ssh/id_rsa.pub"
     hopsworks.vm.provision "shell", inline: "mkdir -p /etc/chef/accepted_licenses && touch /etc/chef/accepted_licenses/chef_infra_client && touch /etc/chef/accepted_licenses/inspec"
     hopsworks.vm.synced_folder "../repos/hopsworks", "/home/vagrant/hopsworks", type: "rsync", create: true
     hopsworks.vm.provision "file", source: "~/.m2/settings.xml", destination: "~/.m2/settings.xml"
     hopsworks.vm.provider :virtualbox do |v|
       v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
       v.customize ["modifyvm", :id, "--memory", 24748]
       v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
       v.customize ["modifyvm", :id, "--nictype1", "virtio"]
       v.customize ["modifyvm", :id, "--name", "ubuntu-name"]
       v.customize ["modifyvm", :id, "--cpus", "8"]
     end

     hopsworks.vm.provision :chef_solo do |chef|
         chef.version = "13.4.19"
         chef.cookbooks_path = "cookbooks"
         chef.json = {
           "karamel" => {
             "default" =>      {
                     "private_ips" => ["10.0.2.15"]
             },
             "run_timeout" => 36000,
           },
           "build" => {
             "test" => {
                "community" => true
             }
           },
           "test" => {
             "hopsworks" => {
               "repo" => "https://github.com/hopsworksjenkins/hopsworks",
               "branch" => "BRANCH",
       	      "it" => false
             },
             "community" => true
           }
         }
         chef.add_recipe "karamel::install"
         chef.add_recipe "karamel::build"
         chef.add_recipe "karamel::default"
         chef.add_recipe "karamel::run"
         chef.add_recipe "karamel::test"
     end
    end
end
