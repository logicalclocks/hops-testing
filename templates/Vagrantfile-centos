Vagrant.configure("2") do |config|

   config.ssh.insert_key = false
   config.vm.box = "bento/centos-7.2"
   config.vm.hostname = 'hopsworks0'

    # Mount .m2 directory for maven cache
    config.vm.synced_folder "../m2", "/root/.m2", create: true
    # Mount output directory
    config.vm.synced_folder "../out", "/home/vagrant/test_report", create: true
    # Anaconda.sh directory
    config.vm.synced_folder "../../anaconda", "/mnt/anaconda"

    config.vm.network :forwarded_port, guest: 22, host: 10022, id: "ssh"
    # karamel http
    config.vm.network(:forwarded_port, {:guest=>9090, :host=>9090})
    # Hopsworks http
    config.vm.network(:forwarded_port, {:guest=>8080, :host=>8080})
    # Glassfish admin UI
    config.vm.network(:forwarded_port, {:guest=>4848, :host=>4848})

    config.vm.provision "file", source: "cluster.yml", destination: "cluster.yml"
    config.vm.provision "file", source: "~/.vagrant.d/insecure_private_key", destination: "~/.ssh/id_rsa"
    config.vm.provision "shell", inline: "cp /home/vagrant/.ssh/authorized_keys /home/vagrant/.ssh/id_rsa.pub && sudo chown vagrant:vagrant /home/vagrant/.ssh/id_rsa.pub"

    config.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 15748]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      v.customize ["modifyvm", :id, "--nictype1", "virtio"]
      v.customize ["modifyvm", :id, "--name", "centos"]
      v.customize ["modifyvm", :id, "--cpus", "8"]
    end

    config.vm.provision :chef_solo do |chef|
        chef.cookbooks_path = "cookbooks"
        chef.json = {
          "karamel" => {
            "default" =>      {
                    "private_ips" => ["10.0.2.15"]
            },
            "run_timeout" => 7200,
          },
          "test" => {
            "hopsworks" => {
              "repo" => "https://github.com/hopsworksjenkins/hopsworks",
              "branch" => "test_platform"
            }
          }
        }
        chef.add_recipe "karamel::install"
        chef.add_recipe "karamel::build"
        chef.add_recipe "karamel::default"
        chef.add_recipe "karamel::run"
        chef.add_recipe "karamel::test"
    end
end
